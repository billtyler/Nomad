// Generated by gencpp from file nomad/RoboclawDiagnostics.msg
// DO NOT EDIT!


#ifndef NOMAD_MESSAGE_ROBOCLAWDIAGNOSTICS_H
#define NOMAD_MESSAGE_ROBOCLAWDIAGNOSTICS_H

#include <ros/service_traits.h>


#include <nomad/RoboclawDiagnosticsRequest.h>
#include <nomad/RoboclawDiagnosticsResponse.h>


namespace nomad
{

struct RoboclawDiagnostics
{

typedef RoboclawDiagnosticsRequest Request;
typedef RoboclawDiagnosticsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RoboclawDiagnostics
} // namespace nomad


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::nomad::RoboclawDiagnostics > {
  static const char* value()
  {
    return "0a5462d7fc20c6e5e33166018b4d434c";
  }

  static const char* value(const ::nomad::RoboclawDiagnostics&) { return value(); }
};

template<>
struct DataType< ::nomad::RoboclawDiagnostics > {
  static const char* value()
  {
    return "nomad/RoboclawDiagnostics";
  }

  static const char* value(const ::nomad::RoboclawDiagnostics&) { return value(); }
};


// service_traits::MD5Sum< ::nomad::RoboclawDiagnosticsRequest> should match 
// service_traits::MD5Sum< ::nomad::RoboclawDiagnostics > 
template<>
struct MD5Sum< ::nomad::RoboclawDiagnosticsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::nomad::RoboclawDiagnostics >::value();
  }
  static const char* value(const ::nomad::RoboclawDiagnosticsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::nomad::RoboclawDiagnosticsRequest> should match 
// service_traits::DataType< ::nomad::RoboclawDiagnostics > 
template<>
struct DataType< ::nomad::RoboclawDiagnosticsRequest>
{
  static const char* value()
  {
    return DataType< ::nomad::RoboclawDiagnostics >::value();
  }
  static const char* value(const ::nomad::RoboclawDiagnosticsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::nomad::RoboclawDiagnosticsResponse> should match 
// service_traits::MD5Sum< ::nomad::RoboclawDiagnostics > 
template<>
struct MD5Sum< ::nomad::RoboclawDiagnosticsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::nomad::RoboclawDiagnostics >::value();
  }
  static const char* value(const ::nomad::RoboclawDiagnosticsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::nomad::RoboclawDiagnosticsResponse> should match 
// service_traits::DataType< ::nomad::RoboclawDiagnostics > 
template<>
struct DataType< ::nomad::RoboclawDiagnosticsResponse>
{
  static const char* value()
  {
    return DataType< ::nomad::RoboclawDiagnostics >::value();
  }
  static const char* value(const ::nomad::RoboclawDiagnosticsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NOMAD_MESSAGE_ROBOCLAWDIAGNOSTICS_H
